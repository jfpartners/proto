// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: to_excel.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name []string `protobuf:"bytes,1,rep,name=name,proto3" json:"name,omitempty"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_to_excel_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_to_excel_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_to_excel_proto_rawDescGZIP(), []int{0}
}

func (x *Data) GetName() []string {
	if x != nil {
		return x.Name
	}
	return nil
}

// The request message containing the user's name.
type JsonFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string   `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Title    []string `protobuf:"bytes,2,rep,name=title,proto3" json:"title,omitempty"`
	Data     []*Data  `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *JsonFileRequest) Reset() {
	*x = JsonFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_to_excel_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JsonFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonFileRequest) ProtoMessage() {}

func (x *JsonFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_to_excel_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonFileRequest.ProtoReflect.Descriptor instead.
func (*JsonFileRequest) Descriptor() ([]byte, []int) {
	return file_to_excel_proto_rawDescGZIP(), []int{1}
}

func (x *JsonFileRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *JsonFileRequest) GetTitle() []string {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *JsonFileRequest) GetData() []*Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// The response message containing the greetings
type ExcelFileReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message []byte `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ExcelFileReply) Reset() {
	*x = ExcelFileReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_to_excel_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExcelFileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExcelFileReply) ProtoMessage() {}

func (x *ExcelFileReply) ProtoReflect() protoreflect.Message {
	mi := &file_to_excel_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExcelFileReply.ProtoReflect.Descriptor instead.
func (*ExcelFileReply) Descriptor() ([]byte, []int) {
	return file_to_excel_proto_rawDescGZIP(), []int{2}
}

func (x *ExcelFileReply) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

var File_to_excel_proto protoreflect.FileDescriptor

var file_to_excel_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x74, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x1a, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5e, 0x0a, 0x0f,
	0x4a, 0x73, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x19, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x05, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2a, 0x0a, 0x0e,
	0x45, 0x78, 0x63, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x37, 0x0a, 0x07, 0x47, 0x72, 0x65, 0x65,
	0x74, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x45, 0x78, 0x63, 0x65, 0x6c, 0x12, 0x10, 0x2e, 0x4a,
	0x73, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f,
	0x2e, 0x45, 0x78, 0x63, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_to_excel_proto_rawDescOnce sync.Once
	file_to_excel_proto_rawDescData = file_to_excel_proto_rawDesc
)

func file_to_excel_proto_rawDescGZIP() []byte {
	file_to_excel_proto_rawDescOnce.Do(func() {
		file_to_excel_proto_rawDescData = protoimpl.X.CompressGZIP(file_to_excel_proto_rawDescData)
	})
	return file_to_excel_proto_rawDescData
}

var file_to_excel_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_to_excel_proto_goTypes = []interface{}{
	(*Data)(nil),            // 0: Data
	(*JsonFileRequest)(nil), // 1: JsonFileRequest
	(*ExcelFileReply)(nil),  // 2: ExcelFileReply
}
var file_to_excel_proto_depIdxs = []int32{
	0, // 0: JsonFileRequest.data:type_name -> Data
	1, // 1: Greeter.Excel:input_type -> JsonFileRequest
	2, // 2: Greeter.Excel:output_type -> ExcelFileReply
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_to_excel_proto_init() }
func file_to_excel_proto_init() {
	if File_to_excel_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_to_excel_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_to_excel_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JsonFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_to_excel_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExcelFileReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_to_excel_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_to_excel_proto_goTypes,
		DependencyIndexes: file_to_excel_proto_depIdxs,
		MessageInfos:      file_to_excel_proto_msgTypes,
	}.Build()
	File_to_excel_proto = out.File
	file_to_excel_proto_rawDesc = nil
	file_to_excel_proto_goTypes = nil
	file_to_excel_proto_depIdxs = nil
}
